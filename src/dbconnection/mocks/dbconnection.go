// Code generated by MockGen. DO NOT EDIT.
// Source: dbconnection.go

// Package mocks is a generated GoMock package.
package mocks

import (
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDbConnectionService is a mock of DbConnectionService interface.
type MockDbConnectionService struct {
	ctrl     *gomock.Controller
	recorder *MockDbConnectionServiceMockRecorder
}

// MockDbConnectionServiceMockRecorder is the mock recorder for MockDbConnectionService.
type MockDbConnectionServiceMockRecorder struct {
	mock *MockDbConnectionService
}

// NewMockDbConnectionService creates a new mock instance.
func NewMockDbConnectionService(ctrl *gomock.Controller) *MockDbConnectionService {
	mock := &MockDbConnectionService{ctrl: ctrl}
	mock.recorder = &MockDbConnectionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbConnectionService) EXPECT() *MockDbConnectionServiceMockRecorder {
	return m.recorder
}

// GetDb mocks base method.
func (m *MockDbConnectionService) GetDb() (*sql.DB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDb")
	ret0, _ := ret[0].(*sql.DB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDb indicates an expected call of GetDb.
func (mr *MockDbConnectionServiceMockRecorder) GetDb() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDb", reflect.TypeOf((*MockDbConnectionService)(nil).GetDb))
}
